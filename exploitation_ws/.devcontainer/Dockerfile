# === Base: CUDA 11.7 base with runtime ===
FROM nvidia/cuda:11.7.1-devel-ubuntu22.04 AS cuda

# === Stage 2: ROS2 Humble with CUDA 12.1 copied in ===
FROM osrf/ros:humble-desktop-full

# Copy CUDA runtime libs from the previous stage
COPY --from=cuda /usr/local/cuda-11.7 /usr/local/cuda-11.7

# Set environment for CUDA 11.7
ENV CUDA_HOME=/usr/local/cuda-11.7
ENV PATH=$CUDA_HOME/bin:$PATH
ENV LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility
ENV NVIDIA_REQUIRE_CUDA="cuda>=11.3"

# Add ubuntu user with same UID/GID as host
ARG USERNAME=ubuntu
ARG USER_UID=1000
ARG USER_GID=$USER_UID
RUN if ! id -u $USER_UID >/dev/null 2>&1; then \
        groupadd --gid $USER_GID $USERNAME && \
        useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME; \
    fi

# Add sudo support
RUN apt-get update && \
    apt-get install -y sudo && \
    echo "$USERNAME ALL=(root) NOPASSWD:ALL" > /etc/sudoers.d/$USERNAME && \
    chmod 0440 /etc/sudoers.d/$USERNAME

# Switch to non-root user
USER $USERNAME

# Optional: Webcam support (remove if not needed)
RUN sudo usermod --append --groups video $USERNAME

# Update packages
RUN sudo apt update && sudo apt upgrade -y

########################################################
# Custom installations
########################################################


# Update and install dependencies
RUN sudo apt update && sudo apt upgrade -y && \
    sudo apt install -y \
    libegl1 \
    libgl1 \
    libgomp1 \
    build-essential \
    cmake \
    curl \
    g++ \
    wget \
    bzip2 \
    git \
    vim \
    tmux \
    htop \
    zip \
    unzip \
    ca-certificates \
    libosmesa6-dev \
    libgl1-mesa-glx \
    libglfw3 \
    patchelf \
    libglu1-mesa \
    libxext6 \
    libxtst6 \
    libxrender1 \
    libxi6 \
    libjpeg-dev \
    libpng-dev \
    libopenblas-dev \
    libopencv-dev \
    libyaml-dev \
    libavformat-dev \
    libavcodec-dev \
    libswscale-dev \
    libavutil-dev \
    libavfilter-dev \
    libavdevice-dev \
    libswresample-dev \
    less \
    groff \
    mpich \
    ninja-build \
    python3-pip \
    ffmpeg

# Set working directory
WORKDIR /workspace

# Install PyTorch first
RUN pip install torch==2.0.1+cu117 torchvision==0.15.2+cu117 torchaudio==2.0.2 --extra-index-url https://download.pytorch.org/whl/cu117

# Install Open3D
RUN pip install torchshow prettytable && \
    pip install --no-cache-dir --upgrade open3d==0.18.0 && \
    pip uninstall tensorflow -y

# Copy and install SEEM/XDecoder requirements
COPY requirements.txt /workspace/requirements.txt
RUN pip install --no-cache-dir -r /workspace/requirements.txt

RUN sudo apt-get update && sudo apt-get install -y \
    ros-${ROS_DISTRO}-tf-transformations

RUN sudo apt-get update && sudo apt-get install -y \
    ros-${ROS_DISTRO}-pcl-ros

RUN apt-get update && apt-get install -y \
    ros-${ROS_DISTRO}-rqt-tf-tree \
    ros-${ROS_DISTRO}-tf2-tools

########################################################
# End Custom installations
########################################################

# Source ROS setup
RUN echo "source /opt/ros/${ROS_DISTRO}/setup.bash" >> ~/.bashrc
