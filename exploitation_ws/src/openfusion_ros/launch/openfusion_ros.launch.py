from launch import LaunchDescription
from launch_ros.actions import Node
from launch.actions import ExecuteProcess
from launch_ros.substitutions import FindPackageShare
import os

def generate_launch_description():
    package_name = 'openfusion_ros'

    # Find config and rviz path
    pkg_share = FindPackageShare(package_name).find(package_name)
    rviz_config = os.path.join(pkg_share, 'rviz', 'rviz.rviz')
    param_file = os.path.join(pkg_share, 'config', 'openfusion_ros.yml')

    return LaunchDescription([
        Node(
            package=package_name,
            executable='main',
            name="openfusion_node",
            output='screen',
            emulate_tty=True,
            parameters=[param_file]
        ),
        ExecuteProcess(
            cmd=['rviz2', '-d', rviz_config],
            output='screen'
        ),
        # ExecuteProcess(
        #     cmd=[
        #         'ros2', 'topic', 'pub', '/semantic/text_query', 'std_msgs/String',
        #         'data: "chair"'
        #     ],
        #     output='screen'
        # )
        # ros2 topic pub /semantic/text_query std_msgs/msg/String '{data: "chair"}'
    ])
